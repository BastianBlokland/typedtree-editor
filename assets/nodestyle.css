#svg-display .node-background {
    fill: #999;
    rx: 10;
    ry: 10;
    stroke: #000;
    stroke-width: 4;
}

#svg-display .nonenode-background {
    fill: #555;
    rx: 10;
    ry: 10;
    stroke: #000;
    stroke-width: 4;
}

#svg-display .node-type {
    font-weight: bold;
    margin-left: 5%;
    width: 90%;
    height: 90%;
    background-color: #DDD;
}

/* Field backgrounds */
#svg-display .string-value-background, #svg-display .stringArray-value-background {
    fill: #696;
    rx: 10;
    ry: 10;
    stroke: #000;
    stroke-width: 2;
}

#svg-display .number-value-background, #svg-display .numberArray-value-background {
    fill: #669;
    rx: 10;
    ry: 10;
    stroke: #000;
    stroke-width: 2;
}

#svg-display .boolean-value-background, #svg-display .booleanArray-value-background {
    fill: #966;
    rx: 10;
    ry: 10;
    stroke: #000;
    stroke-width: 2;
}

#svg-display .node-value-background, #svg-display .nodeArray-value-background {
    fill: #999966;
    rx: 10;
    ry: 10;
    stroke: #000;
    stroke-width: 2;
}

#svg-display .fieldname {
    font-weight: bold;
}

/* Field values */
#svg-display .string-value {
    background-color: #DDD;
    width: 90%;
}

#svg-display .number-value {
    background-color: #DDD;
    width: 90%;
}

#svg-display .boolean-value {
    background-color: #DDD;
    cursor: pointer;
}

#svg-display .connection {
    stroke: #000;
    stroke-width: 4;
    fill: none;
}

#svg-display .fieldvalue-button:hover {
    fill: #FFF;
    cursor: pointer;
}

#svg-display .fieldvalue-button {
    fill: #999;
}

/* Number spinners cause more problems then they are worth in our case. For example in Safari they
render in completely random locations when used inside a svg foreign-object. */
#svg-display input::-webkit-outer-spin-button,
#svg-display input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}
#svg-display input[type=number] {
    -moz-appearance: textfield;
}
